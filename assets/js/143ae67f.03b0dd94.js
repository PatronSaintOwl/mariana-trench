"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[361],{7949:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return m},toc:function(){return u},default:function(){return p}});var a=t(83117),l=t(80102),r=(t(67294),t(3905)),i=["components"],o={id:"contribution",title:"Contribution",sidebar_label:"Contribution"},d=void 0,m={unversionedId:"contribution",id:"contribution",isDocsHomePage:!1,title:"Contribution",description:"This documentation aims to help you become an active contributor to Mariana Trench.",source:"@site/documentation/contribution.md",sourceDirName:".",slug:"/contribution",permalink:"/docs/contribution",editUrl:"https://github.com/facebook/mariana-trench/tree/main/documentation/website/documentation/contribution.md",tags:[],version:"current",frontMatter:{id:"contribution",title:"Contribution",sidebar_label:"Contribution"},sidebar:"docs",previous:{title:"Configuration",permalink:"/docs/configuration"}},u=[{value:"Building From Source",id:"building-from-source",children:[{value:"Support",id:"support",children:[],level:3},{value:"Dependencies",id:"dependencies",children:[],level:3},{value:"Install all dependencies with Homebrew",id:"install-all-dependencies-with-homebrew",children:[],level:3},{value:"Building Redex",id:"building-redex",children:[],level:3},{value:"Building Mariana Trench",id:"building-mariana-trench",children:[],level:3}],level:2},{value:"Development",id:"development",children:[],level:2},{value:"Run the tests",id:"run-the-tests",children:[],level:2}],s={toc:u};function p(e){var n=e.components,t=(0,l.Z)(e,i);return(0,r.mdx)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"This documentation aims to help you become an active contributor to Mariana Trench."),(0,r.mdx)("h2",{id:"building-from-source"},"Building From Source"),(0,r.mdx)("h3",{id:"support"},"Support"),(0,r.mdx)("p",null,"Mariana Trench is currently supported on ",(0,r.mdx)("strong",{parentName:"p"},"macOS")," (tested on ",(0,r.mdx)("em",{parentName:"p"},"Big Sur 11.4"),") and ",(0,r.mdx)("strong",{parentName:"p"},"Linux")," (tested on ",(0,r.mdx)("em",{parentName:"p"},"Ubuntu 20.04 LTS"),")."),(0,r.mdx)("h3",{id:"dependencies"},"Dependencies"),(0,r.mdx)("p",null,"Below is a list of the required dependencies. Most of them can be installed with ",(0,r.mdx)("strong",{parentName:"p"},(0,r.mdx)("a",{parentName:"strong",href:"https://brew.sh/"},"Homebrew")),"."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"A C++ compiler that supports C++17 (GCC >= 7 or Clang >= 5)"),(0,r.mdx)("li",{parentName:"ul"},"Python >= 3.6"),(0,r.mdx)("li",{parentName:"ul"},"CMake >= 3.19.3"),(0,r.mdx)("li",{parentName:"ul"},"zlib"),(0,r.mdx)("li",{parentName:"ul"},"Boost >= 1.75.0"),(0,r.mdx)("li",{parentName:"ul"},"GoogleTest >= 1.10.0"),(0,r.mdx)("li",{parentName:"ul"},"JsonCpp >= 1.9.4"),(0,r.mdx)("li",{parentName:"ul"},"fmt >= 7.1.2"),(0,r.mdx)("li",{parentName:"ul"},"RE2"),(0,r.mdx)("li",{parentName:"ul"},"Java (Optional)"),(0,r.mdx)("li",{parentName:"ul"},"Android SDK (Optional)"),(0,r.mdx)("li",{parentName:"ul"},"Redex (master)")),(0,r.mdx)("h3",{id:"install-all-dependencies-with-homebrew"},"Install all dependencies with Homebrew"),(0,r.mdx)("p",null,"First, follow the instructions to install ",(0,r.mdx)("strong",{parentName:"p"},(0,r.mdx)("a",{parentName:"strong",href:"https://brew.sh/"},"Homebrew"))," on your system."),(0,r.mdx)("p",null,"Then, make sure homebrew is up-to-date:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},"$ brew update\n$ brew upgrade\n")),(0,r.mdx)("p",null,"Finally, install all the dependencies."),(0,r.mdx)("p",null,"On ",(0,r.mdx)("strong",{parentName:"p"},"macOS"),", run:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},"$ brew install python3 cmake zlib boost googletest jsoncpp fmt re2\n")),(0,r.mdx)("p",null,"On ",(0,r.mdx)("strong",{parentName:"p"},"Linux"),", run:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},"$ brew install cmake zlib boost jsoncpp fmt re2\n$ brew install googletest --build-from-source # The package is currently broken.\n$ export CMAKE_PREFIX_PATH=/home/linuxbrew/.linuxbrew/opt/jsoncpp:/home/linuxbrew/.linuxbrew/opt/zlib\n")),(0,r.mdx)("p",null,"On ",(0,r.mdx)("strong",{parentName:"p"},"Linux"),", you will need to install Java to run the tests. For instance, on ",(0,r.mdx)("strong",{parentName:"p"},"Ubuntu"),", run:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},"$ sudo apt install default-jre default-jdk\n")),(0,r.mdx)("h3",{id:"building-redex"},"Building Redex"),(0,r.mdx)("p",null,"You will need to choose a temporary directory to store the C++ binaries and libraries for Redex and Mariana Trench. You can safely remove these after installation if you do not intend to update the C++ code. Pick a directory and set the variable ",(0,r.mdx)("inlineCode",{parentName:"p"},"MT_INSTALL_DIRECTORY")," to its absolute path, for instance:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},'$ MT_INSTALL_DIRECTORY="$PWD/install"\n')),(0,r.mdx)("p",null,"To build ",(0,r.mdx)("a",{parentName:"p",href:"https://fbredex.com/"},"Redex")," from source, run:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},'$ brew install git\n$ git clone https://github.com/facebook/redex.git\n$ cd redex\n$ mkdir build\n$ cd build\n$ cmake -DCMAKE_INSTALL_PREFIX="$MT_INSTALL_DIRECTORY" ..\n$ make -j4\n$ make install\n')),(0,r.mdx)("h3",{id:"building-mariana-trench"},"Building Mariana Trench"),(0,r.mdx)("p",null,"Now that we have our dependencies ready, let's build the Mariana Trench binary:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},'$ cd ../..  # Go back to the root directory\n$ mkdir build\n$ cd build\n$ cmake -DREDEX_ROOT="$MT_INSTALL_DIRECTORY" -DCMAKE_INSTALL_PREFIX="$MT_INSTALL_DIRECTORY" ..\n$ make -j4\n$ make install\n')),(0,r.mdx)("p",null,"Finally, let's install Mariana Trench as a Python package.\nWe recommend to run this step inside a ",(0,r.mdx)("a",{parentName:"p",href:"https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments"},"virtual environment"),"."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},'$ cd .. # Go back to the root directory\n$ python scripts/setup.py \\\n  --binary "$MT_INSTALL_DIRECTORY/bin/mariana-trench-binary" \\\n  --pyredex "$MT_INSTALL_DIRECTORY/bin/pyredex" \\\n  install\n')),(0,r.mdx)("h2",{id:"development"},"Development"),(0,r.mdx)("p",null,"If you are making changes to Mariana Trench, you can use the ",(0,r.mdx)("inlineCode",{parentName:"p"},"mariana-trench")," wrapper inside the build directory:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},"$ cd build\n$ ./mariana-trench --help\n")),(0,r.mdx)("p",null,"This way, you don't have to call ",(0,r.mdx)("inlineCode",{parentName:"p"},"scripts/setup.py")," between every changes.\nPython changes will be automatically picked up.\nC++ changes will be picked up after running ",(0,r.mdx)("inlineCode",{parentName:"p"},"make"),"."),(0,r.mdx)("p",null,"Note that you will need to install all python dependencies:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},"$ pip install pyre_extensions fb-sapp\n")),(0,r.mdx)("h2",{id:"run-the-tests"},"Run the tests"),(0,r.mdx)("p",null,"To run the tests after building Mariana Trench, use:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-shell"},"$ cd build\n$ make check\n")))}p.isMDXComponent=!0}}]);